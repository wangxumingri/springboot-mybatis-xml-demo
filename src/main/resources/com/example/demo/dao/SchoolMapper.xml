<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.SchoolMapper">
    <resultMap id="SchoolResultMap" type="school">
        <id property="id" column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result property="createdOn" column="createdOn" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="updatedOn" column="updatedOn" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="name" column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="code" column="code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <collection property="teacherList" column="id" select="com.example.demo.dao.TeacherMapper.findAllBySchoolId"/>
    </resultMap>

    <sql id="cols">
        createdOn,updatedOn,name,code,status
    </sql>


    <delete id="deleteById">
        delete from school where id=#{oid}
    </delete>

    <select id="findAll" resultMap="SchoolResultMap">
        select * from school
    </select>

    <insert id="save" parameterType="school" useGeneratedKeys="true" keyProperty="id">
            INSERT INTO
                school
                <include refid="cols"/>
            VALUES
                (#{createdOn},#{updatedOn},#{name},#{code},#{status});
    </insert>

    <select id="findOneById" resultMap="SchoolResultMap">
        select
            *
        from school
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findOneByCode" resultMap="SchoolResultMap" >
        select
            *
        from
            school
        where
            code = #{code};
    </select>

    <select id="findOneByCodeAndStatus" resultMap="SchoolResultMap" >
        select
            *
        from
            school
        where
            code = #{code}
        AND
            status=#{status}
    </select>

    <update id="update" parameterType="school">
        update
            school
        set
            createdOn = #{createdOn}
            updatedOn = #{updatedOn},
            name=#{name},
            code=#{code},
            status=#{status}
        where
            id = #{id}
    </update>

<!--    <select id="findByPageWithRowBounds" resultMap="SchoolResultMap" >-->
<!--        select-->
<!--            *-->
<!--        from-->
<!--            school-->
<!--        where-->
<!--            hospitalCode = #{hospitalCode}-->
<!--        order by createdOn asc-->
<!--    </select>-->

</mapper>